@model IEnumerable<Telemed.Models.Doctor>
@using Microsoft.AspNetCore.Identity
@inject UserManager<Telemed.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Doctors - TeleMed";
}

<style>
    body {
        background-color: #f4f6f8;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .doctor-header {
        text-align: center;
        margin: 50px 0 30px;
        font-size: 2rem;
        font-weight: 700;
        color: #343a40;
    }

    .search-bar {
        max-width: 500px;
        margin: 0 auto 40px;
        display: flex;
        gap: 10px;
    }

        .search-bar input {
            flex: 1;
            padding: 12px 20px;
            border-radius: 25px;
            border: 1px solid #ccc;
            font-size: 1rem;
        }

            .search-bar input:focus {
                border-color: #007bff;
                outline: none;
            }

        .search-bar button {
            padding: 12px 25px;
            border-radius: 25px;
            border: none;
            background: linear-gradient(45deg, #007bff, #00b4ff);
            color: #fff;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.3s;
        }

            .search-bar button:hover {
                transform: scale(1.05);
                box-shadow: 0 6px 15px rgba(0, 123, 255, 0.3);
            }

    .doctor-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 30px;
        padding: 0 15px 50px;
        justify-items: center;
    }

    .flip-card {
        background-color: transparent;
        width: 100%;
        perspective: 1000px;
        height: 440px; /* fixed height to prevent overlap */
    }

    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        transition: transform 0.8s;
        transform-style: preserve-3d;
        border-radius: 20px;
    }

    .flip-card:hover .flip-card-inner {
        transform: rotateY(180deg);
    }

    .flip-card-front, .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
        border-radius: 20px;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 20px;
    }

    .flip-card-front {
        background: linear-gradient(145deg, #fff, #e9f0ff);
        box-shadow: 0 10px 25px rgba(0,0,0,0.08);
        transition: transform 0.4s, opacity 0.6s;
        opacity: 0;
        transform: translateY(30px);
    }

        .flip-card-front.visible {
            opacity: 1;
            transform: translateY(0);
        }

    .flip-card-back {
        background: #fff;
        transform: rotateY(180deg);
        box-shadow: 0 10px 25px rgba(0,0,0,0.08);
        gap: 10px;
    }

    .doctor-avatar {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        object-fit: cover;
        border: 4px solid #007bff;
        margin-bottom: 15px;
        transition: transform 0.3s;
    }

        .doctor-avatar:hover {
            transform: scale(1.05);
        }

    .doctor-name {
        font-size: 1.4rem;
        font-weight: 700;
        margin-bottom: 5px;
        color: #333;
    }

    .doctor-specialization {
        font-size: 1rem;
        color: #555;
        margin-bottom: 5px;
    }

    .doctor-qualification {
        font-size: 0.95rem;
        color: #777;
        margin-bottom: 10px;
    }

    .doctor-summary {
        font-size: 0.9rem;
        color: #444;
        margin-bottom: 15px;
        min-height: 50px;
        text-align: center;
    }

    .status-badge {
        display: inline-block;
        padding: 6px 14px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
        margin-bottom: 15px;
    }

    .status-approved {
        background-color: #28a745;
        color: #fff;
    }

    .status-pending {
        background-color: #ffc107;
        color: #000;
    }

    .btn-book, .btn-detail {
        border-radius: 25px;
        font-weight: 600;
        padding: 10px 20px;
        width: 100%;
        transition: all 0.3s;
    }

    .btn-detail {
        background-color: #17a2b8;
        color: #fff;
        border: none;
    }

        .btn-detail:hover {
            background-color: #138496;
            transform: scale(1.05);
        }

    .btn-book {
        background: linear-gradient(45deg, #007bff, #00b4ff);
        color: #fff;
        border: none;
    }

        .btn-book:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 15px rgba(0,123,255,0.3);
        }

    .btn-admin {
        border-radius: 15px;
        font-weight: 600;
        padding: 8px 15px;
        margin: 2px;
        font-size: 0.9rem;
        width: 100%;
    }

    @@media (max-width: 768px) {
        .flip-card

    {
        height: auto;
    }

    }
</style>

<h2 class="doctor-header">Meet Our Doctors</h2>

<form method="get" class="search-bar">
    <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" placeholder="Search by Name or Specialization" />
    <button type="submit">Search</button>
</form>

@if (User.IsInRole("Admin"))
{
    <div class="text-center mb-4">
        <a href="@Url.Action("Create", "Doctors")" class="btn btn-primary btn-admin">Add New Doctor</a>
    </div>
}

<div class="doctor-container">
    @if (!Model.Any())
    {
        <p style="text-align:center; font-size:1.2rem; color:#555;">No doctors found.</p>
    }
    else
    {
        foreach (var doctor in Model)
        {
            <div class="flip-card">
                <div class="flip-card-inner">
                    <!-- Front -->
                    <div class="flip-card-front visible">
                        <img src="@(doctor.User?.ProfileImageUrl ?? "/images/default-user.png")"
                             alt="@doctor.User?.FullName" class="doctor-avatar" />

                        <div class="doctor-name">@doctor.User?.FullName</div>

                        <div class="doctor-specialization"
                             style="font-weight:600;
                        font-size:1.05rem;
                        background: linear-gradient(90deg, #007bff, #00b4ff);
                        -webkit-background-clip: text;
                        -webkit-text-fill-color: transparent;
                        transition: all 0.3s;">
                            @doctor.Specialization
                        </div>

                        <div class="doctor-qualification"
                             style="font-weight:500;
                        font-size:0.95rem;
                        background: linear-gradient(90deg, #28a745, #85e085);
                        -webkit-background-clip: text;
                        -webkit-text-fill-color: transparent;
                        transition: all 0.3s;">
                            @doctor.Qualification
                        </div>

                        <span class="status-badge @(doctor.IsApproved ? "status-approved" : "status-pending")">
                            @(doctor.IsApproved ? "Approved" : "Pending")
                        </span>
                    </div>


                    <!-- Back -->
                    <div class="flip-card-back">
                        <a href="@Url.Action("Details", "Doctors", new { id = doctor.DoctorId })" class="btn btn-detail">Details</a>

                        <form method="get" action="@Url.Action("Book", "Appointments")">
                            <input type="hidden" name="doctorId" value="@doctor.DoctorId" />
                            @if (User.Identity.IsAuthenticated)
                            {
                                <button type="submit" class="btn btn-book">Book Appointment</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-outline-primary btn-book" onclick="alert('Please login first to book appointment')">Book Appointment</button>
                            }
                        </form>

                        @if (User.IsInRole("Admin"))
                        {
                            <a href="@Url.Action("Edit", "Doctors", new { id = doctor.DoctorId })" class="btn btn-warning btn-admin">Edit</a>
                            <a href="@Url.Action("Delete", "Doctors", new { id = doctor.DoctorId })" class="btn btn-danger btn-admin">Delete</a>
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        function revealCards() {
            const cards = document.querySelectorAll('.flip-card-front');
            const windowHeight = window.innerHeight;
            cards.forEach(card => {
                const cardTop = card.getBoundingClientRect().top;
                if(cardTop < windowHeight - 50) card.classList.add('visible');
            });
        }
        window.addEventListener('scroll', revealCards);
        window.addEventListener('load', revealCards);
    </script>
}
