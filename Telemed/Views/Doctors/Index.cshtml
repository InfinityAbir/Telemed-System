@model IEnumerable<Telemed.Models.Doctor>
@using Microsoft.AspNetCore.Identity
@inject UserManager<Telemed.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Doctors - TeleMed";
}

<style>
    body {
        background-color: #ffffff;
        font-family: 'Inter', 'Segoe UI', system-ui, -apple-system, sans-serif;
        color: #1a1a1a;
    }

    /* Header Section */
    .doctors-header-section {
        background: linear-gradient(135deg, #0066FF 0%, #00D4AA 100%);
        padding: 80px 20px 100px;
        text-align: center;
        position: relative;
        overflow: hidden;
        margin-bottom: -40px;
    }

        .doctors-header-section::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -10%;
            width: 500px;
            height: 500px;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1), transparent);
            border-radius: 50%;
        }

    .header-content {
        position: relative;
        z-index: 2;
        max-width: 1200px;
        margin: 0 auto;
    }

    .doctor-header {
        font-size: 3rem;
        font-weight: 800;
        color: white;
        margin-bottom: 16px;
        letter-spacing: -1px;
    }

    .header-subtitle {
        font-size: 1.2rem;
        color: rgba(255, 255, 255, 0.9);
        margin-bottom: 40px;
    }

    /* Search Bar */
    .search-bar {
        max-width: 600px;
        margin: 0 auto;
        display: flex;
        gap: 12px;
        position: relative;
        z-index: 2;
    }

        .search-bar input {
            flex: 1;
            padding: 16px 24px;
            border-radius: 50px;
            border: none;
            font-size: 1rem;
            background: white;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

            .search-bar input:focus {
                outline: none;
                box-shadow: 0 6px 30px rgba(0, 0, 0, 0.15);
                transform: translateY(-2px);
            }

            .search-bar input::placeholder {
                color: #999;
            }

        .search-bar button {
            padding: 16px 32px;
            border-radius: 50px;
            border: none;
            background: white;
            color: #0066FF;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

            .search-bar button:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 30px rgba(0, 0, 0, 0.2);
                background: #f8f9fa;
            }

    /* Admin Actions */
    .admin-actions {
        text-align: center;
        margin: 60px 0 40px;
    }

    .btn-add-doctor {
        background: linear-gradient(135deg, #0066FF, #00D4AA);
        color: white;
        border: none;
        border-radius: 50px;
        padding: 14px 32px;
        font-size: 1rem;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 20px rgba(0, 102, 255, 0.2);
        text-decoration: none;
        display: inline-block;
    }

        .btn-add-doctor:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 30px rgba(0, 102, 255, 0.3);
            color: white;
        }

    /* Doctor Cards Container */
    .doctor-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 32px;
        padding: 80px 20px 80px;
        max-width: 1400px;
        margin: 0 auto;
    }

    /* Modern Card Design */
    .doctor-card {
        background: white;
        border-radius: 24px;
        overflow: hidden;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        border: 2px solid #f0f0f0;
        opacity: 0;
        transform: translateY(30px);
        position: relative;
    }

        .doctor-card.visible {
            opacity: 1;
            transform: translateY(0);
        }

        .doctor-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 5px;
            background: linear-gradient(90deg, #0066FF, #00D4AA);
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }

        .doctor-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 40px rgba(0, 102, 255, 0.15);
            border-color: #0066FF;
        }

            .doctor-card:hover::before {
                transform: scaleX(1);
            }

    /* Card Header with Avatar */
    .card-header-section {
        padding: 32px 24px 24px;
        text-align: center;
        background: linear-gradient(135deg, #F9FAFB 0%, #E8F4FF 100%);
    }

    .doctor-avatar-wrapper {
        width: 120px;
        height: 120px;
        margin: 0 auto 20px;
        border-radius: 50%;
        overflow: hidden;
        border: 4px solid white;
        box-shadow: 0 8px 24px rgba(0, 102, 255, 0.15);
        transition: all 0.3s ease;
        position: relative;
    }

    .doctor-card:hover .doctor-avatar-wrapper {
        transform: scale(1.05);
        box-shadow: 0 12px 32px rgba(0, 102, 255, 0.25);
    }

    .doctor-avatar {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .status-badge {
        display: inline-block;
        padding: 6px 16px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-approved {
        background-color: #E8F9F0;
        color: #00A651;
    }

    .status-pending {
        background-color: #FFF4E5;
        color: #FF9800;
    }

    /* Card Body */
    .card-body-section {
        padding: 24px;
    }

    .doctor-name {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 8px;
        color: #1a1a1a;
        text-align: center;
    }

    .doctor-specialization {
        font-size: 1.05rem;
        font-weight: 600;
        color: #0066FF;
        margin-bottom: 6px;
        text-align: center;
    }

    .doctor-qualification {
        font-size: 0.95rem;
        color: #666;
        margin-bottom: 20px;
        text-align: center;
        line-height: 1.5;
    }

    /* Action Buttons */
    .card-actions {
        display: flex;
        flex-direction: column;
        gap: 10px;
        padding: 0 24px 24px;
    }

    .btn-action {
        border-radius: 12px;
        font-weight: 600;
        padding: 12px 20px;
        width: 100%;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        font-size: 0.95rem;
        text-decoration: none;
        display: inline-block;
        text-align: center;
    }

    .btn-detail {
        background-color: #F9FAFB;
        color: #1a1a1a;
        border: 2px solid #e0e0e0;
    }

        .btn-detail:hover {
            background-color: #E8F4FF;
            border-color: #0066FF;
            color: #0066FF;
            transform: translateY(-2px);
        }

    .btn-book {
        background: linear-gradient(135deg, #0066FF, #00D4AA);
        color: white;
    }

        .btn-book:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 102, 255, 0.3);
            color: white;
        }

    /* Admin Buttons */
    .admin-buttons {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 8px;
        margin-top: 12px;
        padding-top: 12px;
        border-top: 1px solid #f0f0f0;
    }

    .btn-admin {
        border-radius: 10px;
        font-weight: 600;
        padding: 10px 16px;
        font-size: 0.85rem;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        text-align: center;
    }

        .btn-admin.btn-warning {
            background-color: #FFF4E5;
            color: #FF9800;
        }

            .btn-admin.btn-warning:hover {
                background-color: #FFE5CC;
                transform: translateY(-2px);
            }

        .btn-admin.btn-danger {
            background-color: #FFEBEE;
            color: #F44336;
        }

            .btn-admin.btn-danger:hover {
                background-color: #FFCDD2;
                transform: translateY(-2px);
            }

    /* No Results Message */
    .no-results {
        text-align: center;
        padding: 80px 20px;
        color: #666;
    }

        .no-results i {
            font-size: 4rem;
            color: #ccc;
            margin-bottom: 20px;
        }

        .no-results h3 {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: #333;
        }

        .no-results p {
            font-size: 1rem;
            color: #666;
        }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .doctor-header

    {
        font-size: 2.2rem;
    }

    .search-bar {
        flex-direction: column;
        gap: 12px;
    }

    .doctor-container {
        grid-template-columns: 1fr;
        padding: 60px 20px;
    }

    .admin-buttons {
        grid-template-columns: 1fr;
    }

    }

    @@media (min-width: 769px) and (max-width: 1024px) {
        .doctor-container

    {
        grid-template-columns: repeat(2, 1fr);
    }

    }
</style>

<!-- Header Section -->
<section class="doctors-header-section">
    <div class="header-content">
        <h2 class="doctor-header">Meet Our Doctors</h2>
        <p class="header-subtitle">Connect with verified healthcare professionals</p>

        <form method="get" class="search-bar">
            <input type="text" name="searchTerm" value="@ViewBag.SearchTerm"
                   placeholder="Search by name or specialization..." />
            <button type="submit">
                <i class="bi bi-search"></i> Search
            </button>
        </form>
    </div>
</section>

<!-- Admin Actions -->
@if (User.IsInRole("Admin"))
{
    <div class="admin-actions">
        <a href="@Url.Action("Create", "Doctors")" class="btn-add-doctor">
            <i class="bi bi-plus-circle"></i> Add New Doctor
        </a>
    </div>
}

<!-- Doctor Cards -->
<div class="doctor-container">
    @if (!Model.Any())
    {
        <div class="no-results" style="grid-column: 1 / -1;">
            <i class="bi bi-search"></i>
            <h3>No doctors found</h3>
            <p>Try adjusting your search criteria</p>
        </div>
    }
    else
    {
        foreach (var doctor in Model)
        {
            <div class="doctor-card">
                <!-- Card Header -->
                <div class="card-header-section">
                    <div class="doctor-avatar-wrapper">
                        <img src="@(doctor.User?.ProfileImageUrl ?? "/images/default-user.png")"
                             alt="@doctor.User?.FullName" class="doctor-avatar" />
                    </div>
                    <span class="status-badge @(doctor.IsApproved ? "status-approved" : "status-pending")">
                        @(doctor.IsApproved ? "Verified" : "Pending")
                    </span>
                </div>

                <!-- Card Body -->
                <div class="card-body-section">
                    <div class="doctor-name">@doctor.User?.FullName</div>
                    <div class="doctor-specialization">@doctor.Specialization</div>
                    <div class="doctor-qualification">@doctor.Qualification</div>
                </div>

                <!-- Action Buttons -->
                <div class="card-actions">
                    <a href="@Url.Action("Details", "Doctors", new { id = doctor.DoctorId })"
                       class="btn-action btn-detail">
                        <i class="bi bi-info-circle"></i> View Details
                    </a>

                    <form method="get" action="@Url.Action("Book", "Appointments")" style="margin: 0;">
                        <input type="hidden" name="doctorId" value="@doctor.DoctorId" />
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button type="submit" class="btn-action btn-book">
                                <i class="bi bi-calendar-check"></i> Book Appointment
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn-action btn-book"
                                    onclick="alert('Please login first to book appointment')">
                                <i class="bi bi-calendar-check"></i> Book Appointment
                            </button>
                        }
                    </form>

                    @if (User.IsInRole("Admin"))
                    {
                        <div class="admin-buttons">
                            <a href="@Url.Action("Edit", "Doctors", new { id = doctor.DoctorId })"
                               class="btn-admin btn-warning">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <a href="@Url.Action("Delete", "Doctors", new { id = doctor.DoctorId })"
                               class="btn-admin btn-danger">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </div>
                    }
                </div>
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        function revealCards() {
            const cards = document.querySelectorAll('.doctor-card');
            const windowHeight = window.innerHeight;

            cards.forEach((card, index) => {
                const cardTop = card.getBoundingClientRect().top;
                if (cardTop < windowHeight - 50) {
                    setTimeout(() => {
                        card.classList.add('visible');
                    }, index * 100); // Stagger animation
                }
            });
        }

        window.addEventListener('scroll', revealCards);
        window.addEventListener('load', revealCards);
    </script>
}