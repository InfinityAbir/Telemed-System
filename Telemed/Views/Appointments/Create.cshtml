@model Telemed.ViewModels.AppointmentCreateViewModel

@{
    ViewData["Title"] = "Book Appointment";
    var doctors = ViewBag.Doctors as IEnumerable<dynamic>;
    bool isDoctorLocked = ViewBag.IsDoctorLocked ?? false;
    int? selectedDoctorId = ViewBag.SelectedDoctorId;
}

<h2 class="mb-4">@ViewData["Title"]</h2>

<form asp-action="Create" method="post" id="appointmentForm">
    <!-- Doctor Selection -->
    <div class="mb-3">
        <label for="DoctorId" class="form-label">Select Doctor</label>

        @if (isDoctorLocked)
        {
            <select id="DoctorId" name="DoctorId" class="form-select" disabled>
                @foreach (var doc in doctors)
                {
                    if (selectedDoctorId == doc.DoctorId)
                    {
                        <option value="@doc.DoctorId" selected>@doc.FullName</option>
                    }
                    else
                    {
                        <option value="@doc.DoctorId">@doc.FullName</option>
                    }
                }
            </select>
            <input type="hidden" name="DoctorId" value="@selectedDoctorId" />
        }
        else
        {
            <select id="DoctorId" name="DoctorId" class="form-select" required>
                <option value="">-- Choose a Doctor --</option>
                @foreach (var doc in doctors)
                {
                    <option value="@doc.DoctorId">@doc.FullName</option>
                }
            </select>
        }
    </div>

    <!-- Date -->
    <div class="mb-3">
        <label for="AppointmentDate" class="form-label">Select Date</label>
        <input type="date" id="AppointmentDate" class="form-control" required />
    </div>

    <!-- Time Slots -->
    <div class="mb-3">
        <label for="TimeSlot" class="form-label">Available Time Slots</label>
        <select id="TimeSlot" class="form-select" required>
            <option value="">-- Select a Time Slot --</option>
        </select>
        <span class="text-muted" id="slotStatus"></span>
    </div>

    <!-- Consultation Fee -->
    <div class="mb-3">
        <label class="form-label">Consultation Fee</label>
        <input type="text" id="ConsultationFee" class="form-control" readonly value="-" />
    </div>

    <!-- Patient Note -->
    <div class="mb-3">
        <label asp-for="PatientNote" class="form-label"></label>
        <textarea asp-for="PatientNote" class="form-control" rows="3" placeholder="Optional short note about your visit"></textarea>
        <span asp-validation-for="PatientNote" class="text-danger"></span>
    </div>

    <!-- Hidden field to store full datetime -->
    <input type="hidden" asp-for="ScheduledAt" id="ScheduledAt" />

    <button type="submit" class="btn btn-primary">Confirm Appointment</button>
    <a asp-action="Index" class="btn btn-secondary ms-2">Cancel</a>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const doctorSelect = document.getElementById("DoctorId");
            const dateInput = document.getElementById("AppointmentDate");
            const slotSelect = document.getElementById("TimeSlot");
            const slotStatus = document.getElementById("slotStatus");
            const hiddenDateTime = document.getElementById("ScheduledAt");
            const feeInput = document.getElementById("ConsultationFee");

            async function loadSlots() {
                const doctorId = doctorSelect.value;
                const date = dateInput.value;
                if (!doctorId || !date) return;

                slotSelect.innerHTML = '<option>Loading...</option>';
                slotStatus.textContent = '';
                feeInput.value = '-';

                try {
                    const response = await fetch(`/Appointments/GetAvailableSlots?doctorId=${doctorId}&date=${date}`);
                    const data = await response.json();

                    slotSelect.innerHTML = '';
                    if (!data.success) {
                        slotSelect.innerHTML = '<option disabled>No available slots</option>';
                        slotStatus.textContent = data.message || '';
                        return;
                    }

                    data.slots.forEach(time => {
                        const option = document.createElement("option");
                        option.value = time;
                        option.textContent = time;
                        slotSelect.appendChild(option);
                    });

                    feeInput.value = data.fee ? `৳ ${data.fee}` : "-";
                } catch (err) {
                    slotSelect.innerHTML = '<option disabled>Error loading slots</option>';
                }
            }

            doctorSelect?.addEventListener("change", loadSlots);
            dateInput.addEventListener("change", loadSlots);

            slotSelect.addEventListener("change", function () {
                const date = dateInput.value;
                const time = slotSelect.value;
                if (date && time) {
                    hiddenDateTime.value = `${date}T${time}`;
                }
            });
        });
    </script>
}
