@model Telemed.ViewModels.AppointmentCreateViewModel

@{
    ViewData["Title"] = "Book Appointment";
    var doctors = ViewBag.Doctors as IEnumerable<dynamic>;
    bool isDoctorLocked = ViewBag.IsDoctorLocked ?? false;
    int? selectedDoctorId = ViewBag.SelectedDoctorId;
}

<style>
    :root {
        --primary-color: #0066FF;
        --primary-hover: #0052CC;
        --success-color: #10B981;
        --border-color: #E5E7EB;
        --bg-light: #F9FAFB;
        --text-primary: #111827;
        --text-secondary: #6B7280;
        --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    }

    .appointment-container {
        max-width: 800px;
        margin: 2rem auto;
        background: white;
        border-radius: 16px;
        box-shadow: var(--shadow-lg);
        overflow: hidden;
    }

    .appointment-header {
        background: linear-gradient(135deg, #0066FF 0%, #0052CC 100%);
        padding: 2rem;
        color: white;
    }

        .appointment-header h2 {
            margin: 0;
            font-size: 1.75rem;
            font-weight: 600;
        }

        .appointment-header p {
            margin: 0.5rem 0 0;
            opacity: 0.9;
            font-size: 0.95rem;
        }

    .appointment-body {
        padding: 2rem;
    }

    .form-section {
        margin-bottom: 2rem;
    }

        .form-section:last-of-type {
            margin-bottom: 1.5rem;
        }

    .section-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.75rem;
        font-size: 0.95rem;
    }

    .section-icon {
        width: 20px;
        height: 20px;
        color: var(--primary-color);
    }

    .modern-select,
    .modern-input {
        width: 100%;
        padding: 0.875rem 1rem;
        border: 2px solid var(--border-color);
        border-radius: 12px;
        font-size: 0.95rem;
        transition: all 0.2s;
        background: white;
        color: var(--text-primary);
    }

        .modern-select:focus,
        .modern-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(0, 102, 255, 0.1);
        }

        .modern-select:disabled {
            background: var(--bg-light);
            cursor: not-allowed;
        }

    .time-slots-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        gap: 0.75rem;
        margin-top: 0.75rem;
    }

    .time-slot-btn {
        padding: 0.75rem;
        border: 2px solid var(--border-color);
        border-radius: 10px;
        background: white;
        cursor: pointer;
        transition: all 0.2s;
        font-size: 0.9rem;
        font-weight: 500;
        color: var(--text-primary);
        text-align: center;
    }

        .time-slot-btn:hover {
            border-color: var(--primary-color);
            background: rgba(0, 102, 255, 0.05);
        }

        .time-slot-btn.selected {
            border-color: var(--primary-color);
            background: var(--primary-color);
            color: white;
        }

    .fee-display {
        background: var(--bg-light);
        border: 2px solid var(--border-color);
        border-radius: 12px;
        padding: 1.25rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .fee-label {
        color: var(--text-secondary);
        font-size: 0.9rem;
        font-weight: 500;
    }

    .fee-amount {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--success-color);
    }

    .modern-textarea {
        width: 100%;
        padding: 0.875rem 1rem;
        border: 2px solid var(--border-color);
        border-radius: 12px;
        font-size: 0.95rem;
        transition: all 0.2s;
        resize: vertical;
        min-height: 100px;
        font-family: inherit;
    }

        .modern-textarea:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(0, 102, 255, 0.1);
        }

    .action-buttons {
        display: flex;
        gap: 1rem;
        padding-top: 1rem;
        border-top: 1px solid var(--border-color);
    }

    .btn-primary-modern {
        flex: 1;
        padding: 1rem;
        background: var(--primary-color);
        color: white;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.2s;
        box-shadow: var(--shadow-md);
    }

        .btn-primary-modern:hover {
            background: var(--primary-hover);
            transform: translateY(-1px);
            box-shadow: var(--shadow-lg);
        }

    .btn-secondary-modern {
        padding: 1rem 2rem;
        background: white;
        color: var(--text-secondary);
        border: 2px solid var(--border-color);
        border-radius: 12px;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.2s;
        text-decoration: none;
        display: inline-block;
        text-align: center;
    }

        .btn-secondary-modern:hover {
            border-color: var(--text-secondary);
            color: var(--text-primary);
        }

    .status-message {
        margin-top: 0.5rem;
        padding: 0.75rem;
        border-radius: 8px;
        font-size: 0.875rem;
        display: none;
    }

        .status-message.show {
            display: block;
        }

        .status-message.info {
            background: rgba(0, 102, 255, 0.1);
            color: var(--primary-color);
        }

        .status-message.error {
            background: rgba(239, 68, 68, 0.1);
            color: #DC2626;
        }

    .loading-spinner {
        display: inline-block;
        width: 16px;
        height: 16px;
        border: 2px solid var(--border-color);
        border-top-color: var(--primary-color);
        border-radius: 50%;
        animation: spin 0.6s linear infinite;
    }

    @@keyframes spin {
        to

    {
        transform: rotate(360deg);
    }

    }

    .helper-text {
        margin-top: 0.5rem;
        font-size: 0.875rem;
        color: var(--text-secondary);
    }

    @@media (max-width: 640px) {
        .appointment-container

    {
        margin: 1rem;
        border-radius: 12px;
    }

    .appointment-header,
    .appointment-body {
        padding: 1.5rem;
    }

    .time-slots-grid {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    }

    .action-buttons {
        flex-direction: column;
    }

    }
</style>

<div class="appointment-container">
    <div class="appointment-header">
        <h2>Book Your Appointment</h2>
        <p>Schedule a consultation with our experienced doctors</p>
    </div>

    <div class="appointment-body">
        <form asp-controller="Payments" asp-action="BookAppointment" method="post" id="appointmentForm">

            <!-- Doctor Selection -->
            <div class="form-section">
                <label class="section-label">
                    <svg class="section-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                    Select Doctor
                </label>

                @if (isDoctorLocked)
                {
                    <select id="DoctorId" name="doctorId" class="modern-select" disabled>
                        @foreach (var doc in doctors)
                        {
                            if (selectedDoctorId == doc.DoctorId)
                            {
                                <option value="@doc.DoctorId" selected>@doc.FullName</option>
                            }
                            else
                            {
                                <option value="@doc.DoctorId">@doc.FullName</option>
                            }
                        }
                    </select>
                    <input type="hidden" name="doctorId" value="@selectedDoctorId" />
                }
                else
                {
                    <select id="DoctorId" name="doctorId" class="modern-select" required>
                        <option value="">Choose a doctor from the list</option>
                        @foreach (var doc in doctors)
                        {
                            <option value="@doc.DoctorId">@doc.FullName</option>
                        }
                    </select>
                }
            </div>

            <!-- Date -->
            <div class="form-section">
                <label class="section-label">
                    <svg class="section-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                    Select Date
                </label>
                <input type="date" id="AppointmentDate" class="modern-input" required />
                <p class="helper-text">Choose your preferred appointment date</p>
            </div>

            <!-- Time Slots -->
            <div class="form-section">
                <label class="section-label">
                    <svg class="section-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    Available Time Slots
                </label>
                <div id="TimeSlotsContainer" class="time-slots-grid">
                    <div class="time-slot-btn" style="grid-column: 1 / -1; cursor: default; color: var(--text-secondary);">
                        Select a doctor and date to view available slots
                    </div>
                </div>
                <div id="slotStatus" class="status-message"></div>
                <input type="hidden" id="TimeSlot" name="timeSlot" />
            </div>

            <!-- Consultation Fee -->
            <div class="form-section">
                <label class="section-label">
                    <svg class="section-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
                    </svg>
                    Consultation Fee
                </label>
                <div class="fee-display">
                    <span class="fee-label">Amount to Pay</span>
                    <span class="fee-amount" id="ConsultationFee">-</span>
                </div>
            </div>

            <!-- Patient Note -->
            <div class="form-section">
                <label class="section-label" asp-for="PatientNote">
                    <svg class="section-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                    </svg>
                    Additional Notes (Optional)
                </label>
                <textarea asp-for="PatientNote" class="modern-textarea" placeholder="Share any specific concerns or symptoms you'd like the doctor to know about..."></textarea>
                <span asp-validation-for="PatientNote" class="text-danger"></span>
            </div>

            <!-- Hidden field to store full datetime -->
            <input type="hidden" name="scheduledAt" id="ScheduledAt" />

            <div class="action-buttons">
                <button type="submit" class="btn-primary-modern">Confirm Appointment</button>
                <a asp-action="Index" class="btn-secondary-modern">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const doctorSelect = document.getElementById("DoctorId");
            const dateInput = document.getElementById("AppointmentDate");
            const slotsContainer = document.getElementById("TimeSlotsContainer");
            const slotStatus = document.getElementById("slotStatus");
            const hiddenSlot = document.getElementById("TimeSlot");
            const hiddenDateTime = document.getElementById("ScheduledAt");
            const feeDisplay = document.getElementById("ConsultationFee");

            // Set minimum date to today
            const today = new Date().toISOString().split('T')[0];
            dateInput.min = today;

            async function loadSlots() {
                const doctorId = doctorSelect.value;
                const date = dateInput.value;

                if (!doctorId || !date) {
                    slotsContainer.innerHTML = '<div class="time-slot-btn" style="grid-column: 1 / -1; cursor: default; color: var(--text-secondary);">Select a doctor and date to view available slots</div>';
                    return;
                }

                slotsContainer.innerHTML = '<div class="time-slot-btn" style="grid-column: 1 / -1; cursor: default;"><span class="loading-spinner"></span> Loading available slots...</div>';
                slotStatus.className = 'status-message';
                feeDisplay.textContent = '-';
                hiddenSlot.value = '';

                try {
                    const response = await fetch(`/Appointments/GetAvailableSlots?doctorId=${doctorId}&date=${date}`);
                    const data = await response.json();

                    slotsContainer.innerHTML = '';

                    if (!data.success || !data.slots || data.slots.length === 0) {
                        slotsContainer.innerHTML = '<div class="time-slot-btn" style="grid-column: 1 / -1; cursor: default; color: #DC2626;">No available slots for this date</div>';
                        slotStatus.textContent = data.message || 'Please try another date';
                        slotStatus.className = 'status-message show error';
                        return;
                    }

                    data.slots.forEach(time => {
                        const btn = document.createElement("button");
                        btn.type = "button";
                        btn.className = "time-slot-btn";
                        btn.textContent = time;
                        btn.dataset.time = time;

                        btn.addEventListener("click", function() {
                            document.querySelectorAll('.time-slot-btn').forEach(b => b.classList.remove('selected'));
                            this.classList.add('selected');
                            hiddenSlot.value = time;

                            const date = dateInput.value;
                            if (date && time) {
                                hiddenDateTime.value = `${date}T${time}`;
                            }
                        });

                        slotsContainer.appendChild(btn);
                    });

                    feeDisplay.textContent = data.fee ? `৳${data.fee}` : "-";
                    slotStatus.textContent = `${data.slots.length} slots available`;
                    slotStatus.className = 'status-message show info';

                } catch (err) {
                    slotsContainer.innerHTML = '<div class="time-slot-btn" style="grid-column: 1 / -1; cursor: default; color: #DC2626;">Error loading slots</div>';
                    slotStatus.textContent = 'Please try again later';
                    slotStatus.className = 'status-message show error';
                }
            }

            doctorSelect?.addEventListener("change", loadSlots);
            dateInput.addEventListener("change", loadSlots);

            // Form validation
            document.getElementById("appointmentForm").addEventListener("submit", function(e) {
                if (!hiddenSlot.value) {
                    e.preventDefault();
                    slotStatus.textContent = 'Please select a time slot';
                    slotStatus.className = 'status-message show error';
                    slotsContainer.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            });
        });
    </script>
}