@model IEnumerable<Telemed.Models.Appointment>
@using Telemed.Models

@{
    ViewData["Title"] = "Doctor Appointments";
}

<div class="container py-5">
    <h2 class="text-center mb-5">Appointments Dashboard</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center shadow-sm">
            No appointments found.
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var item in Model)
            {
                <!-- Card -->
                <div class="col-sm-12 col-md-6 col-lg-4">
                    <div class="card shadow border-0 rounded-4 appointment-card">

                        <!-- Status bar -->
                        <div class="status-bar bg-@(item.Status switch
                             {
                                 AppointmentStatus.PendingPayment => "warning",
                                 AppointmentStatus.Approved => "primary",
                                 AppointmentStatus.Completed => "success",
                                 AppointmentStatus.Rejected => "danger",
                                 _ => "secondary"
                             }) rounded-top-4"></div>

                <div class="card-body">

                            <!-- Patient Info -->
                            <div class="d-flex align-items-center mb-3">
                                <img src="@(item.Patient?.User?.ProfileImageUrl ?? "/images/default-user.png")"
                                     alt="Patient Photo"
                                     class="rounded-circle me-3 profile-pic">
                                <div>
                                    <h5 class="card-title mb-1">@item.Patient?.User?.FullName</h5>
                                    <small class="text-muted">Patient</small>
                                </div>
                            </div>

                            <!-- Appointment Info -->
                            <p class="mb-2">
                                <i class="bi bi-calendar-event me-2"></i>
                                <strong>Date & Time:</strong> @item.ScheduledAt.ToString("MMMM dd, yyyy hh:mm tt")
                            </p>
                            <p class="mb-2">
                                <i class="bi bi-chat-left-text me-2"></i>
                                <strong>Patient Note:</strong> @(string.IsNullOrEmpty(item.PatientNote) ? "N/A" : item.PatientNote)
                            </p>
                            <p class="mb-2">
                                <i class="bi bi-pencil-square me-2"></i>
                                <strong>Doctor Note:</strong> @(string.IsNullOrEmpty(item.DoctorNote) ? "N/A" : item.DoctorNote)
                            </p>

                            <!-- Status badge -->
                            <span class="badge bg-@(item.Status switch
                          {
                              AppointmentStatus.PendingPayment => "warning",
                              AppointmentStatus.Approved => "primary",
                              AppointmentStatus.Completed => "success",
                              AppointmentStatus.Rejected => "danger",
                              _ => "secondary"
                          }) status-badge">@item.Status</span>

                    <!-- Approve / Reject buttons -->
                    @if (item.Status == AppointmentStatus.PendingPayment)
                            {
                                <div class="d-flex justify-content-between mt-3">
                                    <form asp-action="Approve" asp-route-id="@item.AppointmentId" method="post" class="w-50 me-1">
                                        <button type="submit" class="btn btn-success w-100">Approve</button>
                                    </form>
                                    <form asp-action="Reject" asp-route-id="@item.AppointmentId" method="post" class="w-50 ms-1">
                                        <button type="submit" class="btn btn-danger w-100">Reject</button>
                                    </form>
                                </div>
                            }

                            <!-- View Patient Uploads button -->
                            @if (item.Status != AppointmentStatus.PendingPayment)
                            {
                                <div class="mt-3">
                                    <a href="@Url.Action("PatientUploads", "Prescriptions", new { appointmentId = item.AppointmentId })"
                                       class="btn btn-outline-primary w-100">
                                        <i class="bi bi-upload"></i> View Patient Uploads
                                    </a>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    /* Card Styles */
    .appointment-card {
        transition: all 0.3s ease-in-out;
        background: #ffffff;
        border-radius: 1rem;
        overflow: hidden;
    }

        .appointment-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 28px rgba(0, 0, 0, 0.15);
        }

    /* Status bar */
    .status-bar {
        height: 6px;
        width: 100%;
    }

    .status-badge {
        font-size: 0.85rem;
        padding: 0.35em 0.65em;
        margin-top: 0.5rem;
        display: inline-block;
    }

    /* Profile image */
    .profile-pic {
        width: 55px;
        height: 55px;
        object-fit: cover;
    }

    /* Icons */
    i {
        color: #555;
    }

    /* Responsive spacing */
    @@media (max-width: 576px) {
        .card-body

    {
        padding: 1rem;
    }

    }
</style>

@section Scripts {
    <!-- Bootstrap 5 Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
}
