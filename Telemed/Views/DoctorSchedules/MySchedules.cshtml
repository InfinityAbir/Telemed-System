@model IEnumerable<Telemed.Models.DoctorSchedule>

@{
    ViewData["Title"] = "My Schedules";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Bootstrap 5 -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />

<style>
    body {
        background: linear-gradient(135deg, #e3f2fd, #bbdefb);
        font-family: 'Poppins', sans-serif;
    }

    .schedule-container {
        max-width: 1100px;
        margin: 60px auto;
        display: grid;
        gap: 20px;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    }

    .schedule-card {
        background: #fff;
        border-radius: 16px;
        box-shadow: 0 6px 18px rgba(0,0,0,0.1);
        padding: 20px;
        transition: all 0.3s ease;
        position: relative;
    }

        .schedule-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

    .schedule-header {
        font-size: 1.1rem;
        font-weight: 600;
        color: #1a237e;
        margin-bottom: 10px;
    }

    .schedule-detail {
        font-size: 0.95rem;
        color: #333;
        margin: 4px 0;
    }

    .status-approved {
        color: #2e7d32;
        background: #c8e6c9;
        padding: 5px 12px;
        border-radius: 8px;
        display: inline-block;
        font-weight: 500;
    }

    .status-pending {
        color: #e65100;
        background: #ffe0b2;
        padding: 5px 12px;
        border-radius: 8px;
        display: inline-block;
        font-weight: 500;
    }

    .card-buttons {
        display: flex;
        gap: 10px;
        margin-top: 15px;
    }

    .btn-edit, .btn-delete {
        flex: 1;
        border: none;
        border-radius: 10px;
        padding: 8px 12px;
        font-weight: 500;
        transition: 0.3s;
        cursor: pointer;
    }

    .btn-edit {
        background: linear-gradient(90deg, #42a5f5, #5c6bc0);
        color: white;
    }

        .btn-edit:hover {
            background: linear-gradient(90deg, #1e88e5, #3949ab);
        }

    .btn-delete {
        background: linear-gradient(90deg, #ef5350, #e53935);
        color: white;
    }

        .btn-delete:hover {
            background: linear-gradient(90deg, #c62828, #b71c1c);
        }

    .no-schedules {
        text-align: center;
        margin-top: 80px;
        color: #666;
        font-size: 1.1rem;
    }

    /* Toast notification */
    .toast-container {
        position: fixed;
        top: 1rem;
        right: 1rem;
        z-index: 9999;
    }
</style>

<div class="container mt-5">
    <h2 class="text-center fw-semibold mb-4 text-primary">My Schedules</h2>

    <div class="schedule-container">
        @if (Model != null && Model.Any())
        {
            @foreach (var schedule in Model)
            {
                <div class="schedule-card"
                     data-id="@schedule.ScheduleId"
                     data-start="@schedule.StartTime.ToString(@"hh\:mm")"
                     data-end="@schedule.EndTime.ToString(@"hh\:mm")"
                     data-max="@schedule.MaxPatientsPerDay">

                    <div class="schedule-header">@schedule.Date.ToString("dddd, MMM dd yyyy")</div>

                    <div class="schedule-detail"><strong>Start Time:</strong> @schedule.StartTime.ToString(@"hh\:mm")</div>
                    <div class="schedule-detail"><strong>End Time:</strong> @schedule.EndTime.ToString(@"hh\:mm")</div>
                    <div class="schedule-detail"><strong>Max Patients:</strong> @schedule.MaxPatientsPerDay</div>

                    <div class="mt-2">
                        <span class="@(schedule.IsApproved ? "status-approved" : "status-pending")">
                            @(schedule.IsApproved ? "Approved" : "Pending Approval")
                        </span>
                    </div>

                    <div class="card-buttons">
                        <button type="button" class="btn-edit" onclick="openEditModal(this)">
                            <i class="bi bi-pencil-square"></i> Edit
                        </button>

                        <form asp-action="DeleteConfirmed" asp-route-id="@schedule.ScheduleId" method="post"
                              onsubmit="return confirm('Are you sure you want to delete this schedule?');">
                            <button type="submit" class="btn-delete">
                                <i class="bi bi-trash3"></i> Delete
                            </button>
                        </form>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-schedules">
                You don’t have any schedules yet.<br />
                <a href="@Url.Action("Create", "DoctorSchedules")" class="btn btn-primary mt-3">Add New Schedule</a>
            </div>
        }
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4">
            <form id="editForm" method="post" asp-action="EditSchedule" asp-controller="DoctorSchedules">
                <div class="modal-header">
                    <h5 class="modal-title fw-semibold text-primary">Edit Schedule</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>

                <div class="modal-body">
                    <input type="hidden" id="editScheduleId" name="ScheduleId" />

                    <div class="mb-3">
                        <label class="form-label">Start Time</label>
                        <input type="time" class="form-control" id="editStartTime" name="StartTime" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">End Time</label>
                        <input type="time" class="form-control" id="editEndTime" name="EndTime" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Max Patients</label>
                        <input type="number" class="form-control" id="editMaxPatients" name="MaxPatientsPerDay" min="1" required />
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary px-4">Save Changes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Toast Notification -->
@if (TempData["Message"] != null)
{
    <div class="toast-container">
        <div class="toast show align-items-center text-white bg-success border-0" role="alert">
            <div class="d-flex">
                <div class="toast-body">@TempData["Message"]</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
            </div>
        </div>
    </div>
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.js"></script>

<script>
    function openEditModal(button) {
        const card = button.closest(".schedule-card");
        const id = card.getAttribute("data-id");
        const start = card.getAttribute("data-start");
        const end = card.getAttribute("data-end");
        const max = card.getAttribute("data-max");

        document.getElementById("editScheduleId").value = id;
        document.getElementById("editStartTime").value = start;
        document.getElementById("editEndTime").value = end;
        document.getElementById("editMaxPatients").value = max;

        const editModal = new bootstrap.Modal(document.getElementById('editModal'));
        editModal.show();
    }
</script>
